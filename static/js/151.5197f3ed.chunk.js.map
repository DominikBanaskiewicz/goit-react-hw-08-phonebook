{"version":3,"file":"static/js/151.5197f3ed.chunk.js","mappings":"sMACA,GAAgB,WAAa,gCAAgC,KAAO,0BAA0B,OAAS,6B,SCAvG,EAAsD,0BAAtD,EAAwF,2BAAxF,EAA4H,4BAA5H,EAA4J,uB,oCCK/IA,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MAEbC,EAAS,GACTC,EAAO,GACLC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAsB7B,OACE,+BACE,kBAAMC,UAAWC,EAAUC,SAvBR,SAAAC,GACrBA,EAAIC,iBAEWP,EAASQ,MAAK,SAAAC,GAAI,OAAIA,EAAKV,OAASA,CAAlB,IAI/BW,MAAM,8BAFNd,GAASe,EAAAA,EAAAA,IAAW,CAAEZ,KAAAA,EAAMD,OAAAA,KAI9BQ,EAAIM,OAAOC,OACZ,EAaG,WACE,mBAAOV,UAAWC,EAAlB,WACE,cAAGD,UAAWC,EAAd,mBACA,kBACEU,SAfW,SAAAC,GACnBhB,EAAOgB,EAAEC,cAAcC,MACvBC,QAAQC,IAAIpB,EACb,EAaSqB,KAAK,OACLrB,KAAK,OACLsB,QAAQ,yHACRC,MAAM,+IAGV,mBAAOnB,UAAWC,EAAlB,WACE,cAAGD,UAAWC,EAAd,qBACA,kBACEU,SApBiB,SAAAC,GACzBjB,EAASiB,EAAEC,cAAcC,KAC1B,EAmBSG,KAAK,MACLrB,KAAK,SACLsB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQpB,UAAWC,EAAYgB,KAAK,SAApC,6BAMP,EC9DD,EAAoB,kBAApB,EAA4C,oB,SCK/BI,EAAS,WACpB,IAAM5B,GAAWC,EAAAA,EAAAA,MAMjB,OACE,iBAAKM,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,qCACA,kBACEU,SARqB,SAAAR,GACzB,OAAOV,GAAS6B,EAAAA,EAAAA,GAAmBnB,EAAIU,cAAcC,OACtD,EAOKG,KAAK,OACLrB,KAAK,SACLsB,QAAQ,yHACRC,MAAM,6IAIb,ECfYI,EAAc,WACzB,IAAM9B,GAAWC,EAAAA,EAAAA,MAMX8B,GAAoB1B,EAAAA,EAAAA,IAAY2B,EAAAA,IAMtC,OAJAC,EAAAA,EAAAA,YAAU,WACRjC,GAASkC,EAAAA,EAAAA,MACV,GAAE,CAAClC,KAGF,iCACE,SAACD,EAAD,KACA,SAAC6B,EAAD,KAEA,wBACGG,EAAkBI,KAAI,SAAAtB,GAAI,OACzB,gBAAIN,UAAWC,EAAAA,WAAf,WACE,iBAAMD,UAAWC,EAAAA,KAAjB,SAA4BK,EAAKV,QACjC,iBAAMI,UAAWC,EAAAA,OAAjB,SAA8BK,EAAKX,UACnC,mBACEK,UAAWC,EAAAA,OACXgB,KAAK,SACLY,QAAS,kBAvBAC,EAuBmBxB,EAAKwB,QAtB3CrC,GAASsC,EAAAA,EAAAA,IAAcD,IADJ,IAAAA,CAuBA,EAHX,sBAHkCxB,EAAKwB,GADhB,QAgBlC,E,SCxCc,SAASE,IACtB,IAAMC,GAAOnC,EAAAA,EAAAA,IAAYoC,EAAAA,IACzB,OACE,SAAC,KAAD,WACE,4BACE,SAAC,KAAD,WACE,2CAEF,oCAAYD,EAAKrC,KAAjB,uCACA,SAAC2B,EAAD,QAIP,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","components/ContactList/ContactList.js","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list__elem\":\"ContactList_list__elem__lEGVV\",\"name\":\"ContactList_name__UCkFW\",\"number\":\"ContactList_number__2af8f\"};","// extracted by mini-css-extract-plugin\nexport default {\"add\":\"ContactForm_add__2y4N5\",\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"button\":\"ContactForm_button__eSwX9\",\"p\":\"ContactForm_p__F6qmU\"};","import React from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addContact } from 'redux/contacts/operations';\nimport { getStatusContacts } from 'redux/contacts/selectors';\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  let number = '';\n  let name = '';\n  const contacts = useSelector(getStatusContacts);\n  const onhandleSubmit = evt => {\n    evt.preventDefault();\n    let isNameUnique = false;\n    isNameUnique = contacts.some(elem => elem.name === name);\n    if (!isNameUnique) {\n      dispatch(addContact({ name, number }));\n    } else {\n      alert('This contact already exist');\n    }\n    evt.target.reset();\n  };\n\n  const handleChange = e => {\n    name = e.currentTarget.value;\n    console.log(name);\n  };\n\n  const handleChangeNumber = e => {\n    number = e.currentTarget.value;\n  };\n\n  return (\n    <>\n      <form className={css.form} onSubmit={onhandleSubmit}>\n        <label className={css.label}>\n          <p className={css.p}>Name</p>\n          <input\n            onChange={handleChange}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          />\n        </label>\n        <label className={css.label}>\n          <p className={css.p}>Number</p>\n          <input\n            onChange={handleChangeNumber}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button className={css.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"p\":\"Filter_p__1rMTA\",\"div\":\"Filter_div__h0z7C\"};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { changeFilterAction } from 'redux/filter/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = evt => {\n    return dispatch(changeFilterAction(evt.currentTarget.value));\n  };\n\n  return (\n    <div className={css.div}>\n      <p className={css.p}> Find contacts by name</p>\n      <input\n        onChange={handleFilterChange}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  filterChange: PropTypes.func,\n};\n","import css from './ContactList.module.css';\nimport React from 'react';\nimport { ContactForm } from '../ContactForm/ContactForm';\nimport { Filter } from '../Filter/Filter';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const contactsToPreview = useSelector(selectVisibleContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactForm></ContactForm>\n      <Filter></Filter>\n\n      <ul>\n        {contactsToPreview.map(elem => (\n          <li className={css.list__elem} key={elem.id}>\n            <span className={css.name}>{elem.name}</span>\n            <span className={css.number}>{elem.number}</span>\n            <button\n              className={css.button}\n              type=\"Button\"\n              onClick={() => handleDelete(elem.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from 'redux/auth/selector';\n\nexport default function Contacts() {\n  const user = useSelector(selectUser);\n  return (\n    <HelmetProvider>\n      <div>\n        <Helmet>\n          <title>Contacts</title>\n        </Helmet>\n        <h2>Welome {user.name} here you have your Contact List</h2>\n        <ContactList />\n      </div>\n    </HelmetProvider>\n  );\n}\n"],"names":["ContactForm","dispatch","useDispatch","number","name","contacts","useSelector","getStatusContacts","className","css","onSubmit","evt","preventDefault","some","elem","alert","addContact","target","reset","onChange","e","currentTarget","value","console","log","type","pattern","title","required","Filter","changeFilterAction","ContactList","contactsToPreview","selectVisibleContacts","useEffect","fetchContacts","map","onClick","id","deleteContact","Contacts","user","selectUser"],"sourceRoot":""}